@model InventoryManagement.Models.Resource

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

@{
    String test = (String)ViewContext.RouteData.Values["Controller"];
    Console.WriteLine(test);
}
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Resource</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ResourceId)

    <div class="form-group">
        @Html.LabelFor(model => model.ResourceName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ResourceName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ResourceName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Size, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Size, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Size, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
       <div class="col-md-10">
            @Html.HiddenFor(model => model.Changed, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Changed, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-10">
            @Html.HiddenFor(model => model.PreviousValue, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PreviousValue, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FacilityId, "FacilityName", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("FacilityId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.FacilityId, "", new { @class = "text-danger" })
        </div>
    </div>





    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-success" s /> |
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-info" })
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
